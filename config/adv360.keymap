/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    slash_excl: slash_excl {
        compatible = "zmk,behavior-tap-dance";
        label = "SLASH_EXCL";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp FSLH>, <&kp EQUAL>;

    };

  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
&kp GRAVE   &kp N1      &kp N2        &kp N3         &kp N4         &kp N5          &tog 1                                                              &mo 3          &kp N6    &kp N7     &kp N8        &kp N9    &kp N0       &kp MINUS
&kp TAB     &kp Q       &kp W         &kp E          &kp R          &kp T           &kp K_COPY                                                          &kp C_VOL_UP   &kp Y     &kp U      &kp I         &kp O     &kp P        &kp BSLH
&kp ESC     &kp A       &kp S         &kp D          &kp F          &kp G           &kp K_PASTE     &kp LEFT    &kp RIGHT        &sl 2      &kp RCTRL   &kp C_VOL_DN   &kp H     &kp J      &kp K         &kp L     &kp SEMI     &kp SQT
&kp LSHFT   &kp Z       &kp X         &kp C          &kp V          &kp B                                       &kp LMETA        &kp UP                                &kp N     &kp M      &kp COMMA     &kp DOT   &slash_excl  &kp RSHFT
&kp LCTRL   &kp LMETA   &kp LALT      &kp LEFT       &kp RIGHT                      &kp BACKSPACE   &kp ESC     &kp DEL          &kp DOWN   &kp ENTER   &kp SPACE                &kp DOWN   &kp UP        &kp LBKT  &kp RBKT     &kp RCTRL
>;
        };

        layer_keypad {
            bindings = <
&trans      &trans      &trans        &trans         &trans         &trans          &trans                                                              &trans         &trans    &trans     &trans        &trans    &trans       &trans
&trans      &kp LS(N0)  &kp LS(N1)    &kp LS(N2)     &kp LS(N3)     &trans          &trans                                                              &trans         &trans    &kp N6     &kp LS(LBKT)  &trans    &trans       &trans
&trans      &kp DOT     &kp LS(N4)    &kp LS(N5)     &kp LS(N6)     &trans          &trans          &trans      &trans           &trans     &trans      &trans         &trans    &kp N1     &kp MINUS     &kp N0    &kp FSLH     &trans
&trans      &trans      &kp LS(N7)    &kp LS(N8)     &kp LS(N9)     &trans                                      &trans           &trans                                &trans    &trans     &trans        &trans    &trans       &trans
&trans      &trans      &trans        &trans         &trans                         &trans          &trans      &trans           &trans     &trans      &trans                   &trans     &trans        &trans    &trans       &trans
            >;
        };

        layer_fn_symbols {
            bindings = <
 &kp F1     &kp F2    &kp F3    &kp F4     &kp F5    &kp F6            &tog 1                                                   &mo 3     &kp F7    &kp F8     &kp F9      &kp F10    &kp F11     &kp F12
 &trans  &kp GRAVE    &trans    &trans  &trans        &none             &none                                                   &none     &trans    &kp LBKT &kp RBKT      &kp FSLH   &kp EQUAL      &trans
 &trans   &kp N1    &kp N2    &kp N3     &kp N4    &kp N5               &none  &trans  &trans                  &trans  &trans   &none  &kp N6     &kp N7     &kp N8       &kp N9    &kp N0     &kp MINUS 
 &trans  &trans       &trans    &trans  &trans       &trans                            &trans                  &trans                     &trans    &trans     &trans  &kp PERCENT   &kp HASH      &trans
 &trans     &trans    &trans    &trans     &trans                      &trans  &trans  &trans                  &trans  &trans  &trans               &trans     &trans       &trans     &trans      &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_DEC  &bl BL_INC   &none   &none   &none
            >;
        };

    };
};

/* vim: set ft=c */
